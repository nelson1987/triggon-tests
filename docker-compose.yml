version: '3.7'

services:
   mongo:
    container_name: container-mongodb
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: root-db
    volumes:
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #api:
  # broker:
  #   image: rabbitmq:management
  #   container_name: rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rabbit
  #     - RABBITMQ_DEFAULT_PASS=rabbit
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  # readdata:
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT:-mongodb}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-mongodb}
  #     MONGO_INITDB_ROOT_DATABASE: ${MONGO_ROOT_DB:-mongodb}
  #     SALES_PASSWORD: ${SALES_PASSWORD:-sales}
  #     WAREHOUSE_PASSWORD: ${WAREHOUSE_PASSWORD:-warehouse}
  #   ports:
  #     - 27017:27017
  #   healthcheck:
  #       test: ["CMD-SHELL", "echo 'db.stats().ok' | mongo localhost:27017/huskyDB --quiet"]
  #       interval: 30s
  #       timeout: 10s
  #       retries: 3
  #   command: mongod --auth
  #   volumes:
  #     #- ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - ../scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - mongodb-data:/data/db
  #     # - mongodb-log:/var/log/mongodb

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@localhost:27017/

# volumes:
#   mongodb-data:
  #mongodb-log: